// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -- //
// ms //
// -- //

#define ms_wrap_target 0
#define ms_wrap 20

static const uint16_t ms_program_instructions[] = {
            //     .wrap_target
    0xe002, //  0: set    pins, 2                    
    0x00c7, //  1: jmp    pin, 7                     
    0xe001, //  2: set    pins, 1                    
    0xa047, //  3: mov    y, osr                     
    0x006c, //  4: jmp    !y, 12                     
    0xa942, //  5: nop                           [9] 
    0x0080, //  6: jmp    y--, 0                     
    0xa047, //  7: mov    y, osr                     
    0x006c, //  8: jmp    !y, 12                     
    0xa942, //  9: nop                           [9] 
    0xe001, // 10: set    pins, 1                    
    0x0080, // 11: jmp    y--, 0                     
    0xe001, // 12: set    pins, 1                    
    0x00d1, // 13: jmp    pin, 17                    
    0xa047, // 14: mov    y, osr                     
    0x006c, // 15: jmp    !y, 12                     
    0x0000, // 16: jmp    0                          
    0xe002, // 17: set    pins, 2                    
    0xa047, // 18: mov    y, osr                     
    0x006c, // 19: jmp    !y, 12                     
    0x0000, // 20: jmp    0                          
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program ms_program = {
    .instructions = ms_program_instructions,
    .length = 21,
    .origin = -1,
};

static inline pio_sm_config ms_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ms_wrap_target, offset + ms_wrap);
    return c;
}

    void ms_program_init(PIO pio, uint sm, uint offset, uint setPin, uint sideSetPin, uint jmpPin, float div)
    {
        pio_sm_config c = ms_program_get_default_config(offset);
        pio_gpio_init(pio, setPin);
        pio_gpio_init(pio, setPin + 1);
        pio_gpio_init(pio, sideSetPin);
        sm_config_set_set_pins(&c, setPin, 2);
        sm_config_set_sideset_pins(&c, sideSetPin);
        sm_config_set_jmp_pin(&c, jmpPin);
        sm_config_set_clkdiv(&c, div);
        sm_config_set_out_shift(&c, true, true, 32);
        pio_sm_set_consecutive_pindirs(pio, sm, setPin, 2, true);
        pio_sm_set_consecutive_pindirs(pio, sm, sideSetPin, 1, true);
        pio_sm_init(pio, sm, offset, &c);
    }

#endif

