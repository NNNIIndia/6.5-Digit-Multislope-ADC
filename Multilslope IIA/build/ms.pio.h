// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -- //
// ms //
// -- //

#define ms_wrap_target 0
#define ms_wrap 20

static const uint16_t ms_program_instructions[] = {
            //     .wrap_target
    0xe002, //  0: set    pins, 2                    
    0x00c8, //  1: jmp    pin, 8                     
    0xe001, //  2: set    pins, 1                    
    0x80a0, //  3: pull   block                      
    0xa047, //  4: mov    y, osr                     
    0x006e, //  5: jmp    !y, 14                     
    0xa842, //  6: nop                           [8] 
    0x0080, //  7: jmp    y--, 0                     
    0x80a0, //  8: pull   block                      
    0xa047, //  9: mov    y, osr                     
    0x006e, // 10: jmp    !y, 14                     
    0xa842, // 11: nop                           [8] 
    0xe001, // 12: set    pins, 1                    
    0x0080, // 13: jmp    y--, 0                     
    0xe001, // 14: set    pins, 1                    
    0x00d2, // 15: jmp    pin, 18                    
    0x006e, // 16: jmp    !y, 14                     
    0x0000, // 17: jmp    0                          
    0xe002, // 18: set    pins, 2                    
    0x006e, // 19: jmp    !y, 14                     
    0x0000, // 20: jmp    0                          
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program ms_program = {
    .instructions = ms_program_instructions,
    .length = 21,
    .origin = -1,
};

static inline pio_sm_config ms_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + ms_wrap_target, offset + ms_wrap);
    return c;
}

    void ms_program_init(PIO pio, uint sm, uint offset, uint setPin, uint sideSetPin, uint jmpPin, float div)
    {
        pio_sm_config c = ms_program_get_default_config(offset);
        pio_gpio_init(pio, setPin);
        pio_gpio_init(pio, setPin + 1);
        pio_gpio_init(pio, sideSetPin);
        sm_config_set_set_pins(&c, setPin, 2);
        sm_config_set_sideset_pins(&c, sideSetPin);
        sm_config_set_jmp_pin(&c, jmpPin);
        sm_config_set_clkdiv(&c, div);
        //sm_config_set_out_shift(&c, false, true, 32);
        pio_sm_set_consecutive_pindirs(pio, sm, setPin, 2, true);
        pio_sm_set_consecutive_pindirs(pio, sm, sideSetPin, 1, true);
        pio_sm_init(pio, sm, offset, &c);
    }

#endif

